import{_ as s,o as a,c as t,a as o}from"./app.80a2fbfa.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"widget.onShow() function","slug":"widget-onshow-function","link":"#widget-onshow-function","children":[]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]}],"relativePath":"karte-action-sdk.widget.onshow.md"}'),e={name:"karte-action-sdk.widget.onshow.md"},n=o(`<p><a href="./">Home</a> &gt; <a href="./karte-action-sdk.html">@plaidev/karte-action-sdk</a> &gt; <a href="./karte-action-sdk.widget.html">widget</a> &gt; <a href="./karte-action-sdk.widget.onshow.html">onShow</a></p><h2 id="widget-onshow-function" tabindex="-1">widget.onShow() function <a class="header-anchor" href="#widget-onshow-function" aria-hidden="true">#</a></h2><p>アクションが表示 (show) された後にフックする関数</p><p><strong>Signature:</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onShow</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Props</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ModalProps</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Variables</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ActionHook</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Props</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Variables</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ActionVariables</span><span style="color:#89DDFF;">&gt;):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>fn</td><td>ActionHook&lt;Props, Variables &amp; ActionVariables&gt;</td><td>呼び出されるフック関数</td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p>`,9),l=[n];function r(p,c,i,d,h,y){return a(),t("div",null,l)}const A=s(e,[["render",r]]);export{C as __pageData,A as default};
