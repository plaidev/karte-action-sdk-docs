import{_ as t,c as a,o as e,a as d}from"./app.66a57ebd.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"karte-action-sdk package","slug":"karte-action-sdk-package","link":"#karte-action-sdk-package","children":[]},{"level":2,"title":"Functions","slug":"functions","link":"#functions","children":[]},{"level":2,"title":"Interfaces","slug":"interfaces","link":"#interfaces","children":[]},{"level":2,"title":"Namespaces","slug":"namespaces","link":"#namespaces","children":[]},{"level":2,"title":"Variables","slug":"variables","link":"#variables","children":[]},{"level":2,"title":"Type Aliases","slug":"type-aliases","link":"#type-aliases","children":[]}],"relativePath":"karte-action-sdk.md"}'),r={name:"karte-action-sdk.md"},o=d('<p><a href="./">Home</a> &gt; <a href="./karte-action-sdk.html">@plaidev/karte-action-sdk</a></p><h2 id="karte-action-sdk-package" tabindex="-1">karte-action-sdk package <a class="header-anchor" href="#karte-action-sdk-package" aria-hidden="true">#</a></h2><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.addstate.html">addState(stateId)</a></td><td><a href="./karte-action-sdk.getstates.html">getStates()</a> function to add new state ID to list of state IDs.</td></tr><tr><td><a href="./karte-action-sdk.applycss.html">applyCss(css)</a></td><td><a href="./karte-action-sdk.applycss.html">applyCss()</a> apply CSS to KARTE action.</td></tr><tr><td><a href="./karte-action-sdk.applyglobalcss.html">applyGlobalCss(css)</a></td><td><a href="./karte-action-sdk.applyglobalcss.html">applyGlobalCss()</a> apply global CSS to WEB page.</td></tr><tr><td><a href="./karte-action-sdk.closeaction.html">closeAction(trigger)</a></td><td>Close KARTE action</td></tr><tr><td><a href="./karte-action-sdk.create.html">create(App, options)</a></td><td>Create the KARTE action</td></tr><tr><td><a href="./karte-action-sdk.createapp.html">createApp(App, options)</a></td><td>Create an application instance</td></tr><tr><td><a href="./karte-action-sdk.createfog.html">createFog({ color, opacity, zIndex, onclick })</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.customanimation.html">customAnimation(node, { transform, animationStyle, delay, duration })</a></td><td>The function to activate svelte animation.</td></tr><tr><td><a href="./karte-action-sdk.destroy.html">destroy()</a></td><td>Destory KARTE action</td></tr><tr><td><a href="./karte-action-sdk.dispatchdestroyevent.html">dispatchDestroyEvent()</a></td><td>Dispatch the event to destroy KARTE action</td></tr><tr><td><a href="./karte-action-sdk.embed.html">embed(target, replace, embed_method)</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.ensureactionroot.html">ensureActionRoot(useShadow)</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.getactionsetting.html">getActionSetting()</a></td><td><a href="./karte-action-sdk.getactionsetting.html">getActionSetting()</a> function to get action setting. {ActionSetting} Current action setting</td></tr><tr><td><a href="./karte-action-sdk.getactionshadowroot.html">getActionShadowRoot()</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.getcustomhandlers.html">getCustomHandlers()</a></td><td><a href="./karte-action-sdk.getcustomhandlers.html">getCustomHandlers()</a> function to get custom event handlers. {{ [key: string]: ActionEventHandler }} Current custom event handlers</td></tr><tr><td><a href="./karte-action-sdk.getcustomvariables.html">getCustomVariables()</a></td><td><a href="./karte-action-sdk.getcustomvariables.html">getCustomVariables()</a> function to get custom variables. {CustomVariables} Current custom variables</td></tr><tr><td><a href="./karte-action-sdk.getinternalhandlers.html">getInternalHandlers()</a></td><td><a href="./karte-action-sdk.getinternalhandlers.html">getInternalHandlers()</a> function to get internal event handlers. {{ [key: string]: ActionEventHandler }} Current internal handlers</td></tr><tr><td><a href="./karte-action-sdk.getstate.html">getState()</a></td><td><a href="./karte-action-sdk.getstate.html">getState()</a> function to get current state ID. {string} Current state ID</td></tr><tr><td><a href="./karte-action-sdk.getstates.html">getStates()</a></td><td><a href="./karte-action-sdk.getstates.html">getStates()</a> function to get a list of all state IDs. {string[]} All state IDs</td></tr><tr><td><a href="./karte-action-sdk.getsystem.html">getSystem()</a></td><td><a href="./karte-action-sdk.getsystem.html">getSystem()</a> function to get KARTE system config. {SystemConfig} Current karte system config</td></tr><tr><td><a href="./karte-action-sdk.hashcode.html">hashCode(s)</a></td><td><a href="./karte-action-sdk.hashcode.html">hashCode()</a> generate hash with FNV-1a hash</td></tr><tr><td><a href="./karte-action-sdk.hassuffix.html">hasSuffix(value, suffix)</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.hideonscroll.html">hideOnScroll({ hide_on_scroll, hide_on_scroll_rate, show_on_scroll_reenter }, hide, show)</a></td><td>The scroll trigger function to hide the action</td></tr><tr><td><a href="./karte-action-sdk.hideontime.html">hideOnTime(props, hide)</a></td><td>The time trigger function to hide the action</td></tr><tr><td><a href="./karte-action-sdk.isclosed.html">isClosed()</a></td><td><a href="./karte-action-sdk.isclosed.html">isClosed()</a> function to check if action is clsoed.</td></tr><tr><td><a href="./karte-action-sdk.isdestroyed.html">isDestroyed()</a></td><td><a href="./karte-action-sdk.isdestroyed.html">isDestroyed()</a> function to check if action is destroyed. {boolean} Flag if action is destoryed / true: Destroyed, false: Not Destroyed</td></tr><tr><td><a href="./karte-action-sdk.isopened.html">isOpened()</a></td><td><a href="./karte-action-sdk.isopened.html">isOpened()</a> function to check if action is opened. {boolean} Flag if action is opend / true: Opend, false: Not opened</td></tr><tr><td><a href="./karte-action-sdk.isstopped.html">isStopped()</a></td><td><a href="./karte-action-sdk.isstopped.html">isStopped()</a> function to check if action is stopped. {boolean} Flag if action is stopped / true: Stopped, false: Not stopped</td></tr><tr><td><a href="./karte-action-sdk.loadglobalscript.html">loadGlobalScript(src)</a></td><td><a href="./karte-action-sdk.loadglobalscript.html">loadGlobalScript()</a> load JavaScript that does not support ESM.</td></tr><tr><td><a href="./karte-action-sdk.loadglobalstyle.html">loadGlobalStyle(href)</a></td><td><a href="./karte-action-sdk.loadglobalstyle.html">loadGlobalStyle()</a> load global style to WEB page.</td></tr><tr><td><a href="./karte-action-sdk.loadstyle.html">loadStyle(href)</a></td><td><a href="./karte-action-sdk.loadstyle.html">loadStyle()</a> load global style to KARTE action.</td></tr><tr><td><a href="./karte-action-sdk.onchangestate.html">onChangeState(fn)</a></td><td><a href="./karte-action-sdk.onchangestate.html">onChangeState()</a> function to set the function to hook the phase after changing action state.</td></tr><tr><td><a href="./karte-action-sdk.onclose.html">onClose(fn)</a></td><td><a href="./karte-action-sdk.onclose.html">onClose()</a> function to set the function to hook the phase before closing action.</td></tr><tr><td><a href="./karte-action-sdk.oncreate.html">onCreate(fn)</a></td><td><a href="./karte-action-sdk.oncreate.html">onCreate()</a> function to set the function to hook the phase before creating action.</td></tr><tr><td><a href="./karte-action-sdk.ondestroy.html">onDestroy(fn)</a></td><td>function to set the function to hook the phase before destroying action.</td></tr><tr><td><a href="./karte-action-sdk.onscroll.html">onScroll(rate, fn)</a></td><td>The scroll event hooking function</td></tr><tr><td><a href="./karte-action-sdk.onshow.html">onShow(fn)</a></td><td><a href="./karte-action-sdk.onshow.html">onShow()</a> function to set the function to hook the phase after showing action.</td></tr><tr><td><a href="./karte-action-sdk.ontime.html">onTime(time, fn)</a></td><td>The time event hooking function</td></tr><tr><td><a href="./karte-action-sdk.randstr.html">randStr(digit)</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.resetactionsetting.html">resetActionSetting()</a></td><td><a href="./karte-action-sdk.resetactionsetting.html">resetActionSetting()</a> function to reset action setting</td></tr><tr><td><a href="./karte-action-sdk.setactionsetting.html">setActionSetting(setting)</a></td><td><a href="./karte-action-sdk.setactionsetting.html">setActionSetting()</a> function to &quot;update&quot; action setting</td></tr><tr><td><a href="./karte-action-sdk.setclosed.html">setClosed(on)</a></td><td><a href="./karte-action-sdk.setclosed.html">setClosed()</a> function to set if action is closed.</td></tr><tr><td><a href="./karte-action-sdk.setcustomhandlers.html">setCustomHandlers(handlers)</a></td><td><a href="./karte-action-sdk.setcustomhandlers.html">setCustomHandlers()</a> function to set custom event handlers.</td></tr><tr><td><a href="./karte-action-sdk.setcustomvariables.html">setCustomVariables(variables)</a></td><td><a href="./karte-action-sdk.setcustomvariables.html">setCustomVariables()</a> function to set custom variables.</td></tr><tr><td><a href="./karte-action-sdk.setdestroyed.html">setDestroyed(on)</a></td><td><a href="./karte-action-sdk.setdestroyed.html">setDestroyed()</a> function to set if action is destroyed.</td></tr><tr><td><a href="./karte-action-sdk.setinternalhandlers.html">setInternalHandlers(handlers)</a></td><td><a href="./karte-action-sdk.setinternalhandlers.html">setInternalHandlers()</a> function to set internal event handlers.</td></tr><tr><td><a href="./karte-action-sdk.setopened.html">setOpened(on)</a></td><td><a href="./karte-action-sdk.setopened.html">setOpened()</a> function to set if action is opened.</td></tr><tr><td><a href="./karte-action-sdk.setstate.html">setState(stateId, force)</a></td><td><a href="./karte-action-sdk.setstate.html">setState()</a> function to set current state ID.</td></tr><tr><td><a href="./karte-action-sdk.setstopped.html">setStopped(on)</a></td><td><a href="./karte-action-sdk.setstopped.html">setStopped()</a> function to set if action is stopped.</td></tr><tr><td><a href="./karte-action-sdk.setsystem.html">setSystem(config)</a></td><td><a href="./karte-action-sdk.setsystem.html">setSystem()</a> function to set KARTE system config.</td></tr><tr><td><a href="./karte-action-sdk.showaction.html">showAction()</a></td><td>Show KARTE action</td></tr><tr><td><a href="./karte-action-sdk.showonscroll.html">showOnScroll({ show_on_scroll, show_on_scroll_rate, hide_on_scroll_releave }, show, hide)</a></td><td>The scroll trigger function to show the action</td></tr><tr><td><a href="./karte-action-sdk.showontime.html">showOnTime(props, show)</a></td><td>The time trigger function to show the action</td></tr><tr><td><a href="./karte-action-sdk.tobr.html">toBr(text)</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.updatecustomhandlers.html">updateCustomHandlers(handlers)</a></td><td><a href="./karte-action-sdk.updatecustomhandlers.html">updateCustomHandlers()</a> function to update custom event handlers.</td></tr><tr><td><a href="./karte-action-sdk.updatecustomvariables.html">updateCustomVariables(variables)</a></td><td><a href="./karte-action-sdk.updatecustomvariables.html">updateCustomVariables()</a> function to update custom variables.</td></tr><tr><td><a href="./karte-action-sdk.updateinternalhandlers.html">updateInternalHandlers(handlers)</a></td><td><a href="./karte-action-sdk.updateinternalhandlers.html">updateInternalHandlers()</a> function to update internal event handlers.</td></tr></tbody></table><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-hidden="true">#</a></h2><table><thead><tr><th>Interface</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.actionoptions.html">ActionOptions</a></td><td>An options for <a href="./karte-action-sdk.create.html">create()</a></td></tr><tr><td><a href="./karte-action-sdk.actionprops.html">ActionProps</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.app.html">App</a></td><td>App application instance that is with <a href="./karte-action-sdk.createapp.html">createApp()</a></td></tr><tr><td><a href="./karte-action-sdk.formdata_2.html">FormData_2</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listbackgroundnone.html">ListBackgroundNone</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listbackgroundstripe.html">ListBackgroundStripe</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listseparatorborder.html">ListSeparatorBorder</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listseparatorgap.html">ListSeparatorGap</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listseparatornone.html">ListSeparatorNone</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.onscrollcontext.html">OnScrollContext</a></td><td>The context for <a href="./karte-action-sdk.onscroll.html">onScroll()</a></td></tr></tbody></table><h2 id="namespaces" tabindex="-1">Namespaces <a class="header-anchor" href="#namespaces" aria-hidden="true">#</a></h2><table><thead><tr><th>Namespace</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.widget.html">widget</a></td><td></td></tr></tbody></table><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h2><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.action_change_state_event.html">ACTION_CHANGE_STATE_EVENT</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.action_close_event.html">ACTION_CLOSE_EVENT</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.action_destroy_event.html">ACTION_DESTROY_EVENT</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.action_show_event.html">ACTION_SHOW_EVENT</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.actionid.html">actionId</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.actionsetting.html">actionSetting</a></td><td>Store to handle action setting</td></tr><tr><td><a href="./karte-action-sdk.alignments.html">Alignments</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.all_action_id.html">ALL_ACTION_ID</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.all_action_shorten_id.html">ALL_ACTION_SHORTEN_ID</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.animationstyles.html">AnimationStyles</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.backgroundsizes.html">BackgroundSizes</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.clippaths.html">ClipPaths</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.close_2.html">close_2</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.closeapp.html">closeApp</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.closed_2.html">closed_2</a></td><td>Store to handle visibility of action</td></tr><tr><td><a href="./karte-action-sdk.collection.html">collection</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.cursors.html">Cursors</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.customhandlers.html">customHandlers</a></td><td><p>Store to handle custom event handlers</p><p>This is used internally.</p></td></tr><tr><td><a href="./karte-action-sdk.customvariables.html">customVariables</a></td><td>Store to handle custom variables</td></tr><tr><td><a href="./karte-action-sdk.defaultlistbackground.html">DefaultListBackground</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.defaultlistbackgroundnone.html">DefaultListBackgroundNone</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.defaultlistbackgroundstripe.html">DefaultListBackgroundStripe</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.defaultlistseparator.html">DefaultListSeparator</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.defaultlistseparatorborder.html">DefaultListSeparatorBorder</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.defaultlistseparatorgap.html">DefaultListSeparatorGap</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.defaultlistseparatornone.html">DefaultListSeparatorNone</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.defaultmodalplacement.html">DefaultModalPlacement</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.destroyed.html">destroyed</a></td><td>Store to handle destruction of action</td></tr><tr><td><a href="./karte-action-sdk.directions.html">Directions</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.elasticities.html">Elasticities</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.elasticitystyle.html">ElasticityStyle</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.ensuremodalroot.html">ensureModalRoot</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.execonclickoperation.html">execOnClickOperation</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.finalize.html">finalize</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.formdata.html">formData</a></td><td>Store for form data</td></tr><tr><td><a href="./karte-action-sdk.getmarginstyle.html">getMarginStyle</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.getpositionstyle.html">getPositionStyle</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.getstorestate.html">getStoreState</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.gettransform.html">getTransform</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.h.html">h</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.handlefocus.html">handleFocus</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.handlekeydown.html">handleKeydown</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.handlestate.html">handleState</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.havefunction.html">haveFunction</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.initialize.html">initialize</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.internalhandlers.html">internalHandlers</a></td><td><p>Store to handle internal event handlers</p><p>This is used internally.</p></td></tr><tr><td><a href="./karte-action-sdk.ispreview.html">isPreview</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.justifies.html">Justifies</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.karte_action_rid.html">KARTE_ACTION_RID</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.karte_action_root.html">KARTE_ACTION_ROOT</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.karte_action_shorten_id.html">KARTE_ACTION_SHORTEN_ID</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.karte_modal_root.html">KARTE_MODAL_ROOT</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.lengthunits.html">LengthUnits</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.linkto.html">linkTo</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listbackgroundtypes.html">ListBackgroundTypes</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listdirections.html">ListDirections</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listseparatortypes.html">ListSeparatorTypes</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.maximumzindex.html">maximumZindex</a></td><td>Store to handle max z-index for grid items</td></tr><tr><td><a href="./karte-action-sdk.mediaqueries.html">MediaQueries</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.modalpositions.html">ModalPositions</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.moveto_2.html">moveTo_2</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.none.html">none</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.noop.html">NOOP</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.objectfits.html">ObjectFits</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.onclickoperationoptions.html">OnClickOperationOptions</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.opened.html">opened</a></td><td>Store to handle visibility of action</td></tr><tr><td><a href="./karte-action-sdk.overflows.html">Overflows</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.proptypes.html">PropTypes</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.repeats.html">Repeats</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.runscript.html">runScript</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.send_event.html">send_event</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.setautostart.html">setAutoStart</a></td><td><p><a href="./karte-action-sdk.setautostart.html">setAutoStart</a> function to set auto start flag.</p><p>NOTE: Use setActionConfig({ autoStart: false }).</p></td></tr><tr><td><a href="./karte-action-sdk.setmaximumzindex.html">setMaximumZindex</a></td><td>function to get maximum z-index.</td></tr><tr><td><a href="./karte-action-sdk.setpreviousfocus.html">setPreviousFocus</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.show.html">show</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.showmodal.html">showModal</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.state.html">state</a></td><td><p>Store to handle current state ID</p><p>This is exported becase of compatible interface for App.svelte. Don&#39;t use directly.</p></td></tr><tr><td><a href="./karte-action-sdk.states.html">states</a></td><td>Store to handle all state IDs</td></tr><tr><td><a href="./karte-action-sdk.stopped.html">stopped</a></td><td>Store to handle stopping action</td></tr><tr><td><a href="./karte-action-sdk.system.html">system</a></td><td>Store to read KARTE system config</td></tr><tr><td><a href="./karte-action-sdk.textdirections.html">TextDirections</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.writingmodes.html">WritingModes</a></td><td></td></tr></tbody></table><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a></h2><table><thead><tr><th>Type Alias</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.actioneventhandler.html">ActionEventHandler</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.actionsetting.html">ActionSetting</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.alignment.html">Alignment</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.animationstyle.html">AnimationStyle</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.appoptions.html">AppOptions</a></td><td>An options for <a href="./karte-action-sdk.createapp.html">createApp()</a></td></tr><tr><td><a href="./karte-action-sdk.backgroundsize.html">BackgroundSize</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.border.html">Border</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.borderstyle.html">BorderStyle</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.borderwidth.html">BorderWidth</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.clippath.html">ClipPath</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.closetrigger.html">CloseTrigger</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.code.html">Code</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.color.html">Color</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.cursor.html">Cursor</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.customvariables.html">CustomVariables</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.direction.html">Direction</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.elasticity.html">Elasticity</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.embedlogic.html">EmbedLogic</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.image_2.html">Image_2</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.justify.html">Justify</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.length.html">Length</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.lengthunit.html">LengthUnit</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listbackground.html">ListBackground</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listcontext.html">ListContext</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listdirection.html">ListDirection</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.listseparator.html">ListSeparator</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.longtext.html">LongText</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.mediaquery.html">MediaQuery</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.modalmargin.html">ModalMargin</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.modaloptions.html">ModalOptions</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.modalplacement.html">ModalPlacement</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.modalposition.html">ModalPosition</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.objectfit.html">ObjectFit</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.onclickoperation.html">OnClickOperation</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.onscrollfunction.html">OnScrollFunction</a></td><td>The function which is called by <a href="./karte-action-sdk.onscroll.html">onScroll()</a></td></tr><tr><td><a href="./karte-action-sdk.operation.html">Operation</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.operationargumenttype.html">OperationArgumentType</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.overflow.html">Overflow</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.proptype.html">PropType</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.repeat.html">Repeat</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.scrolldirection.html">ScrollDirection</a></td><td>The scroll direction</td></tr><tr><td><a href="./karte-action-sdk.statename.html">StateName</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.store.html">Store</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.style.html">Style</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.systemconfig.html">SystemConfig</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.textdirection.html">TextDirection</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.url.html">Url</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.writingmode.html">WritingMode</a></td><td></td></tr></tbody></table>',12),s=[o];function n(i,h,l,c,k,f){return e(),a("div",null,s)}const u=t(r,[["render",n]]);export{p as __pageData,u as default};
