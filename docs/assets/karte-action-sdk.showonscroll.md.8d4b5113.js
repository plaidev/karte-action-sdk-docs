import{_ as s,c as o,o as a,a as n}from"./app.2006f7f5.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"showOnScroll() function","slug":"showonscroll-function","link":"#showonscroll-function","children":[]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Remarks","slug":"remarks","link":"#remarks","children":[]}],"relativePath":"karte-action-sdk.showonscroll.md"}'),l={name:"karte-action-sdk.showonscroll.md"},e=n(`<p><a href="./">Home</a> &gt; <a href="./karte-action-sdk.html">@plaidev/karte-action-sdk</a> &gt; <a href="./karte-action-sdk.showonscroll.html">showOnScroll</a></p><h2 id="showonscroll-function" tabindex="-1">showOnScroll() function <a class="header-anchor" href="#showonscroll-function" aria-hidden="true">#</a></h2><p>スクロールに応じてアクションを表示するトリガー関数</p><p><strong>Signature:</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">showOnScroll</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Props</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Pick</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">_Props</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">show_on_scroll</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">show_on_scroll_rate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hide_on_scroll_releave</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;(</span><span style="color:#A6ACCD;font-style:italic;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Props</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">show</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hide</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>props</td><td>Props</td><td>アクションのプロパティ。プロパティには <code>show_on_scroll</code>、<code>show_on_scroll_rate</code> そして <code>hide_on_scroll_releave</code> が必要です。</td></tr><tr><td>show</td><td>Function</td><td><em>(Optional)</em> アクションを表示するロジックが実装された関数。指定ない場合は noop 関数が使用されます。</td></tr><tr><td>hide</td><td>Function</td><td><em>(Optional)</em> アクションを非表示にするロジックが実装された関数。指定ない場合は noop 関数が使用されます。</td></tr></tbody></table><p><strong>Returns:</strong></p><p>(() =&gt; void) | null</p><p>スクロールが開始されている場合は、クリーンアップ関数を返します。そうでない場合は <code>null</code> を返します</p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-hidden="true">#</a></h2><p>スクロール率が <code>show_on_scroll_rate</code> に達したときに <code>show</code> 関数を呼び出します。 <code>hide_on_scroll_releave</code> が <code>true</code> で、かつ <code>show_on_scroll_rate</code> 以下の場合は、アクションに対して <code>hide</code> 関数が呼び出されます。</p>`,12),t=[e];function r(p,c,d,i,h,D){return a(),o("div",null,t)}const C=s(l,[["render",r]]);export{y as __pageData,C as default};
