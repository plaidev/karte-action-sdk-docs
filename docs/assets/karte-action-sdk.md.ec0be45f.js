import{_ as t,o as a,c as e,a as d}from"./app.efb16c53.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"karte-action-sdk package","slug":"karte-action-sdk-package","link":"#karte-action-sdk-package","children":[]},{"level":2,"title":"Functions","slug":"functions","link":"#functions","children":[]},{"level":2,"title":"Interfaces","slug":"interfaces","link":"#interfaces","children":[]},{"level":2,"title":"Namespaces","slug":"namespaces","link":"#namespaces","children":[]},{"level":2,"title":"Variables","slug":"variables","link":"#variables","children":[]},{"level":2,"title":"Type Aliases","slug":"type-aliases","link":"#type-aliases","children":[]}],"relativePath":"karte-action-sdk.md"}'),r={name:"karte-action-sdk.md"},n=d('<p><a href="./">Home</a> &gt; <a href="./karte-action-sdk.html">@plaidev/karte-action-sdk</a></p><h2 id="karte-action-sdk-package" tabindex="-1">karte-action-sdk package <a class="header-anchor" href="#karte-action-sdk-package" aria-hidden="true">#</a></h2><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.addchoiceanswer.html">addChoiceAnswer(questionId, choices, validation)</a></td><td>選択式のアンケート回答を追加する</td></tr><tr><td><a href="./karte-action-sdk.addfreeanswer.html">addFreeAnswer(questionId, freeAnswer, validation)</a></td><td>自由記述式のアンケート回答を追加する</td></tr><tr><td><a href="./karte-action-sdk.applycss.html">applyCss(css)</a></td><td>アクションに CSS を適用する</td></tr><tr><td><a href="./karte-action-sdk.applyglobalcss.html">applyGlobalCss(css)</a></td><td>グローバル CSS をページに適用する</td></tr><tr><td><a href="./karte-action-sdk.closeaction.html">closeAction(trigger)</a></td><td>アクションを閉じる</td></tr><tr><td><a href="./karte-action-sdk.collection.html">collection(config)</a></td><td>アクションテーブルを管理するメソッドを取得する</td></tr><tr><td><a href="./karte-action-sdk.create.html">create(App, options)</a></td><td>アクションを作成する</td></tr><tr><td><a href="./karte-action-sdk.destroyaction.html">destroyAction()</a></td><td>アクションの破棄する</td></tr><tr><td><a href="./karte-action-sdk.getactionroot.html">getActionRoot()</a></td><td>アクションのルートの DOM 要素を取得する</td></tr><tr><td><a href="./karte-action-sdk.getansweredquestion.html">getAnsweredQuestion(questionId)</a></td><td>回答済の回答内容を取得する</td></tr><tr><td><a href="./karte-action-sdk.getansweredquestionids.html">getAnsweredQuestionIds()</a></td><td>回答済の回答IDのリストを取得</td></tr><tr><td><a href="./karte-action-sdk.getcssvariables.html">getCssVariables(data)</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.geteventhandlers.html">getEventHandlers()</a></td><td>イベントハンドラーの一覧を取得する</td></tr><tr><td><a href="./karte-action-sdk.getstate.html">getState()</a></td><td>現在のステートを取得する</td></tr><tr><td><a href="./karte-action-sdk.getstates.html">getStates()</a></td><td>ステートID一覧を取得する</td></tr><tr><td><a href="./karte-action-sdk.getsystem.html">getSystem()</a></td><td>KARTE の設定を取得する</td></tr><tr><td><a href="./karte-action-sdk.getvariables.html">getVariables()</a></td><td>変数の一覧を取得する</td></tr><tr><td><a href="./karte-action-sdk.isopened.html">isOpened()</a></td><td>アクションの表示・非表示の状態を取得する</td></tr><tr><td><a href="./karte-action-sdk.loadglobalscript.html">loadGlobalScript(src)</a></td><td>ES Modules に対応していない JavaScript をページに読み込む</td></tr><tr><td><a href="./karte-action-sdk.loadglobalstyle.html">loadGlobalStyle(href)</a></td><td>style ファイルをページに読み込む</td></tr><tr><td><a href="./karte-action-sdk.loadstyle.html">loadStyle(href)</a></td><td>アクションにグローバルなスタイルを読み込む</td></tr><tr><td><a href="./karte-action-sdk.onchangestate.html">onChangeState(fn)</a></td><td>アクションのステートが変更された (changeState) 後にフックする関数</td></tr><tr><td><a href="./karte-action-sdk.onclose.html">onClose(fn)</a></td><td>アクションがクローズ (close) される前にフックする関数</td></tr><tr><td><a href="./karte-action-sdk.oncreate.html">onCreate(fn)</a></td><td>アクションが作成 (create) される前にフックする関数</td></tr><tr><td><a href="./karte-action-sdk.ondestroy.html">onDestroy(fn)</a></td><td>アクションが破棄 (destroy) される前にフックする関数</td></tr><tr><td><a href="./karte-action-sdk.onscroll.html">onScroll(rate, fn)</a></td><td>スクロール率が達したときに呼び出すコールバックを登録します</td></tr><tr><td><a href="./karte-action-sdk.onshow.html">onShow(fn)</a></td><td>アクションが表示 (show) された後にフックする関数</td></tr><tr><td><a href="./karte-action-sdk.ontime.html">onTime(time, fn)</a></td><td>指定した時間の経過後に呼び出すコールバックを登録します</td></tr><tr><td><a href="./karte-action-sdk.removeanswer.html">removeAnswer(questionId)</a></td><td>回答済の回答を削除</td></tr><tr><td><a href="./karte-action-sdk.reseteventhandlers.html">resetEventHandlers()</a></td><td>イベントハンドラーをリセットする</td></tr><tr><td><a href="./karte-action-sdk.resetvariables.html">resetVariables()</a></td><td>変数をリセットする</td></tr><tr><td><a href="./karte-action-sdk.sendanswer.html">sendAnswer()</a></td><td><code>sendAnswers</code>のエイリアス</td></tr><tr><td><a href="./karte-action-sdk.sendanswers.html">sendAnswers()</a></td><td>回答済の回答をまとめてイベントとして送信する</td></tr><tr><td><a href="./karte-action-sdk.seteventhandlers.html">setEventHandlers(handlers)</a></td><td>イベントハンドラーを登録する</td></tr><tr><td><a href="./karte-action-sdk.setsetting.html">setSetting(setting)</a></td><td>アクション設定を更新する</td></tr><tr><td><a href="./karte-action-sdk.setstate.html">setState(stateId, options)</a></td><td>現在のステートを設定する</td></tr><tr><td><a href="./karte-action-sdk.setvariables.html">setVariables(vars)</a></td><td>変数を設定する</td></tr><tr><td><a href="./karte-action-sdk.showaction.html">showAction()</a></td><td>アクションを表示する</td></tr></tbody></table><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-hidden="true">#</a></h2><table><thead><tr><th>Interface</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.actionoptions.html">ActionOptions</a></td><td><a href="./karte-action-sdk.create.html">create()</a> 向けのオプション</td></tr><tr><td><a href="./karte-action-sdk.actionprops.html">ActionProps</a></td><td>アクションのプロパティ</td></tr><tr><td><a href="./karte-action-sdk.onscrollcontext.html">OnScrollContext</a></td><td><a href="./karte-action-sdk.onscroll.html">onScroll()</a> のスクロールコンテキスト情報</td></tr></tbody></table><h2 id="namespaces" tabindex="-1">Namespaces <a class="header-anchor" href="#namespaces" aria-hidden="true">#</a></h2><table><thead><tr><th>Namespace</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.widget.html">widget</a></td><td></td></tr></tbody></table><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h2><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.afterupdate.html">afterUpdate</a></td><td>エレメントを更新した後に実行される関数の登録</td></tr><tr><td><a href="./karte-action-sdk.beforeupdate.html">beforeUpdate</a></td><td>エレメントを更新する前に実行される関数の登録</td></tr><tr><td><a href="./karte-action-sdk.formidentifytextfields.html">FormIdentifyTextFields</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.layout_component_names.html">LAYOUT_COMPONENT_NAMES</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.ondestory.html">onDestory</a></td><td>エレメントを破棄したときに実行される関数の登録</td></tr><tr><td><a href="./karte-action-sdk.onmount.html">onMount</a></td><td>エレメントをマウントしたときに実行される関数の登録</td></tr><tr><td><a href="./karte-action-sdk.tick.html">tick</a></td><td>エレメントのライフサイクルを進める</td></tr></tbody></table><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a></h2><table><thead><tr><th>Type Alias</th><th>Description</th></tr></thead><tbody><tr><td><a href="./karte-action-sdk.actionchangestatehook.html">ActionChangeStateHook</a></td><td>アクションのライフサイクル changeState で呼び出されるフック関数</td></tr><tr><td><a href="./karte-action-sdk.actionclosehook.html">ActionCloseHook</a></td><td>アクションのライフサイクル close で呼び出されるフックする関数</td></tr><tr><td><a href="./karte-action-sdk.actioneventhandler.html">ActionEventHandler</a></td><td>アクションのイベントハンドラ</td></tr><tr><td><a href="./karte-action-sdk.actionhook.html">ActionHook</a></td><td>アクションのライフサイクルで呼び出されるフック</td></tr><tr><td><a href="./karte-action-sdk.actionvariables.html">ActionVariables</a></td><td>アクションの変数</td></tr><tr><td><a href="./karte-action-sdk.closetrigger.html">CloseTrigger</a></td><td>閉じるアクショントリガー</td></tr><tr><td><a href="./karte-action-sdk.collectionconfig.html">CollectionConfig</a></td><td>アクションテーブルの設定情報</td></tr><tr><td><a href="./karte-action-sdk.font.html">Font</a></td><td></td></tr><tr><td><a href="./karte-action-sdk.onscrollfunction.html">OnScrollFunction</a></td><td><a href="./karte-action-sdk.onscroll.html">onScroll()</a> によって呼び出されるコールバック関数</td></tr><tr><td><a href="./karte-action-sdk.publishfunction.html">PublishFunction</a></td><td>アクションの publish 関数</td></tr><tr><td><a href="./karte-action-sdk.scrolldirection.html">ScrollDirection</a></td><td>スクロール方向</td></tr><tr><td><a href="./karte-action-sdk.sendfunction.html">SendFunction</a></td><td>アクションの send 関数</td></tr><tr><td><a href="./karte-action-sdk.systemconfig.html">SystemConfig</a></td><td>KARTE のシステム設定情報</td></tr></tbody></table>',12),s=[n];function o(i,l,h,c,k,f){return a(),e("div",null,s)}const g=t(r,[["render",o]]);export{p as __pageData,g as default};
